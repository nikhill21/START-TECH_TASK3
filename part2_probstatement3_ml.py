# -*- coding: utf-8 -*-
"""part2_probStatement3_ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p_fcPf88xS-dwrvxUZlw3hnEtnch7tuL

# NIKHIL PANCHAL
# START TECH ACADEMY
# TASK 2 : PROBLEM STATEMENT 3
# QUESTION :
                       #Your task is to help John from STA IT services to create a linear 
      regression model in Python or R to predict the CTC/Salary of new 
      hires from the data provided.
"""

#Importing required libraries
import numpy as np
import pandas as pd
import matplotlib as plt
import seaborn as sea

#Loading and Scan the Dataset
dataset = pd.read_excel('Data_file.xlsx', header = 2,index_col=0)
dataset

#Displaying the first five datasets
dataset.head()

#Displaying the summary of this Dataset
dataset.info()

#Description of the given dataset
dataset.describe()

#Checking for null values
dataset.isnull().sum()

"""# Here we observe that there are no null values present in our dataset.

# EXPLORING THE DATASET
"""

sea.heatmap(dataset.corr(),annot=True)

sea.pairplot(dataset)

sea.distplot(dataset["CTC"])

n = 5
dataset['Exp (Months)'].value_counts()[:n].index.tolist()

sea.barplot(x = 'Exp (Months)', y = 'CTC', order = [18,19,50,51,47], data = dataset)
b

n = 5
dataset['Graduation marks'].value_counts()[:n].index.tolist()

sea.barplot(x = 'Graduation marks', y = 'CTC', order = [46,37,82,75,42], data = dataset)

#Now load TEST dataset
test = pd.read_excel('Test_data_file.xlsx')
test.head()

test.columns

#Dropping unwanted columns appeared
test.drop(test.columns[14:23], axis=1, inplace=True)
test.head()

del test['Unnamed: 13']
del test['Unnamed: 23']

test.head()

#We don't have to include 'Role','College' and 'City Type'
del test['Role']
del test['College']
del test['City type']

#Now displaying the test dataset
test.head()

"""# BUILD LINEAR REGRESSION MODEL"""

X = test[['previous CTC','previous job changes','Graduation marks','Exp','College_T1','College_T2','Role_Manager','City_Metro']]
Y = test[['Actual CTC']]

X

Y

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.3,random_state = 101)

#Importing Linear Regression
from sklearn.linear_model import LinearRegression
lm = LinearRegression()
lm.fit(X_train,Y_train)

"""# PREDICTING THE CTC"""

prediction = lm.predict(X)
test['Predicted CTC'] = prediction
test.head()

#Predicted CTC
prediction

#Plotting the predicted CTC with Actual CTC
sea.lmplot(x = 'Actual CTC', y = 'Predicted CTC', data = test, line_kws = {'color': 'red'})

#Find out the MEAN SQUARE VALUE
from sklearn import metrics

print("Mean Squared Error: ",metrics.mean_squared_error(Y,prediction))
print("Root Mean Squared Error: ",np.sqrt(metrics.mean_squared_error(Y,prediction)))